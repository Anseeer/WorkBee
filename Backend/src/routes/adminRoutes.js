"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const express_1 = __importDefault(require("express"));
const inversify_container_1 = __importDefault(require("../inversify/inversify.container"));
const inversify_types_1 = __importDefault(require("../inversify/inversify.types"));
const authorizeMiddleware_1 = require("../middlewares/authorizeMiddleware");
const authMiddleware_1 = require("../middlewares/authMiddleware");
const adminController = inversify_container_1.default.get(inversify_types_1.default.adminController);
const Router = express_1.default.Router();
Router.post('/login', adminController.login);
Router.post('/logout', authMiddleware_1.auth, (0, authorizeMiddleware_1.authorize)(["Admin"]), adminController.logout);
Router.get('/users', authMiddleware_1.auth, (0, authorizeMiddleware_1.authorize)(["Admin"]), adminController.fetchUsers);
Router.get('/users/set-status', authMiddleware_1.auth, (0, authorizeMiddleware_1.authorize)(["Admin"]), adminController.setIsActiveUsers);
Router.get('/workers/set-status', authMiddleware_1.auth, (0, authorizeMiddleware_1.authorize)(["Admin"]), adminController.setIsActiveWorkers);
Router.get('/workers', authMiddleware_1.auth, (0, authorizeMiddleware_1.authorize)(["Admin"]), adminController.fetchWorkers);
Router.get('/workers-nonVerify', authMiddleware_1.auth, (0, authorizeMiddleware_1.authorize)(["Admin"]), adminController.fetchWorkersNonVerified);
Router.get('/fetch-availability', authMiddleware_1.auth, (0, authorizeMiddleware_1.authorize)(["Admin"]), adminController.fetchAvailability);
Router.get('/approve-worker', authMiddleware_1.auth, (0, authorizeMiddleware_1.authorize)(["Admin"]), adminController.approveWorker);
Router.get('/reject-worker', authMiddleware_1.auth, (0, authorizeMiddleware_1.authorize)(["Admin"]), adminController.rejectedWorker);
exports.default = Router;
