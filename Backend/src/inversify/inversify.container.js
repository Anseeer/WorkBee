"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const inversify_types_1 = __importDefault(require("./inversify.types"));
const inversify_1 = require("inversify");
// Classes
const user_repo_1 = require("../repositories/user/user.repo");
const user_service_1 = require("../services/user/user.service");
const user_controller_1 = require("../controllers/user/user.controller");
const admin_controller_1 = require("../controllers/admin/admin.controller");
const admin_service_1 = require("../services/admin/admin.service");
const worker_repo_1 = require("../repositories/worker/worker.repo");
const worker_controller_1 = require("../controllers/worker/worker.controller");
const worker_service_1 = require("../services/worker/worker.service");
const category_controller_1 = require("../controllers/category/category.controller");
const category_repo_1 = require("../repositories/category/category.repo");
const category_service_1 = require("../services/category/category.service");
const availability_repo_1 = require("../repositories/availability/availability.repo");
const availability_service_1 = require("../services/availability/availability.service");
const wallet_repo_1 = require("../repositories/wallet/wallet.repo");
const wallet_service_1 = require("../services/wallet/wallet.service");
const chat_repo_1 = require("../repositories/chat/chat.repo");
const service_repo_1 = require("../repositories/services/service.repo");
const service_service_1 = require("../services/service/service.service");
const services_controller_1 = require("../controllers/services/services.controller");
const work_repo_1 = require("../repositories/work/work.repo");
const work_service_1 = require("../services/work/work.service");
const work_controller_1 = require("../controllers/work/work.controller");
const chatMessage_service_1 = require("../services/chatMessage/chatMessage.service");
const chatMessage_controller_1 = require("../controllers/chatMessage/chatMessage.controller");
const message_repo_1 = require("../repositories/message/message.repo");
const container = new inversify_1.Container();
container.bind(inversify_types_1.default.userRepository).to(user_repo_1.UserRepository);
container.bind(inversify_types_1.default.userService).to(user_service_1.UserService);
container.bind(inversify_types_1.default.userController).to(user_controller_1.UserController);
container.bind(inversify_types_1.default.adminService).to(admin_service_1.AdminService);
container.bind(inversify_types_1.default.adminController).to(admin_controller_1.AdminController);
container.bind(inversify_types_1.default.workerRepository).to(worker_repo_1.WorkerRepository);
container.bind(inversify_types_1.default.workerService).to(worker_service_1.WorkerService);
container.bind(inversify_types_1.default.workerController).to(worker_controller_1.WorkerController);
container.bind(inversify_types_1.default.categoryRepository).to(category_repo_1.CategoryRepository);
container.bind(inversify_types_1.default.categoryService).to(category_service_1.CategoryService);
container.bind(inversify_types_1.default.categoryController).to(category_controller_1.CategoryController);
container.bind(inversify_types_1.default.serviceRepository).to(service_repo_1.ServiceRepository);
container.bind(inversify_types_1.default.serviceService).to(service_service_1.ServiceService);
container.bind(inversify_types_1.default.serviceController).to(services_controller_1.ServiceController);
container.bind(inversify_types_1.default.workRepository).to(work_repo_1.WorkRepository);
container.bind(inversify_types_1.default.workService).to(work_service_1.WorkService);
container.bind(inversify_types_1.default.workController).to(work_controller_1.WorkController);
container.bind(inversify_types_1.default.availabilityRepository).to(availability_repo_1.AvailabilityRepository);
container.bind(inversify_types_1.default.availabilityService).to(availability_service_1.AvailabilityService);
container.bind(inversify_types_1.default.walletRepository).to(wallet_repo_1.WalletRepository);
container.bind(inversify_types_1.default.walletService).to(wallet_service_1.WalletService);
container.bind(inversify_types_1.default.chatRepository).to(chat_repo_1.ChatRepository);
container.bind(inversify_types_1.default.chatService).to(chatMessage_service_1.ChatService);
container.bind(inversify_types_1.default.chatController).to(chatMessage_controller_1.ChatController);
container.bind(inversify_types_1.default.messageRepository).to(message_repo_1.MessageRepository);
exports.default = container;
